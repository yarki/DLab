#---- List of all dlab parameters (commented ones are passing from UI/Jenkins) ----#


#--- [conf] section contains all common for all templates parameters ---#
[conf]
### Unique infrastructure name
# service_base_name =
### Type of the resourse (ssn, edge, notebook, emr)
# resource =
### OS-related ssh user name (ubuntu/ec2-user)
# os_user =
### OS that supported by dlab (debian/redhat)
# os_family =
### Cloud provider that supported by dlab (aws/azure)
# cloud_provider =
### Ddmin ssh key name in cloud provider
# key_name =
### Directory in Docker where key is uploaded
key_dir = /root/keys/
### Type of the provisionong stage (should be change for 'prod')
lifecycle_stage = dev


#--- [aws] section contains all common parameters related to Amazon ---#
[aws]
### Amazon iam user access_key
# access_key =
### Amazon iam user secret_access_key
# secret_access_key =
### Id of the security group for SSN instance
# security_groups_ids =
### Id of the subnet for SSN and EDGE provisioning
# subnet_id =
### Id of the vpc for whole dlab provisioning
# vpc_id =
### Amazon iam user name
# iam_user =
### EC2 instance type for notebook
# notebook_instance_type =
### EC2 instance type for SSN
ssn_instance_size = t2.medium
### EC2 instance type for EDGE
edge_instance_size = t2.medium
### Amazon region name for whole dlab provisioning
region = us-west-2
### Amazon ami name based on debian conf_os_family for all dlab instances
debian_ami_name = ubuntu/images/hvm-ssd/ubuntu-xenial-16.04-amd64-server-20160907.1
### Amazon ami name based on RedHat conf_os_family for all dlab instances
redhat_ami_name = RHEL-7.3_HVM_GA-20161026-x86_64-1-Hourly2-GP2


#--- [ssn] section contains all parameters that are using for self-service node provisioning ---#
[ssn]
### System path on SSN instance where dlab will be installed
dlab_path = /opt/dlab/


#--- [edge] section contains all parameters that are using for edge node provisioning ---#
[edge]
### User name for exploratory environment being deployed
# user_name =
### Elastic IP which will be associated with Edge node
# elastic_ip =


#--- [notebook] section contains all parameters that are using for all notebooks provisioning ---#
[notebook]
### Notebook EC2 instance name
# instance_name =
### Size of the additional volume for notebook instance
disk_size = 30
### Version of Apache Spark to be installed on notebook
spark_version = 2.0.2
### Version of Apache Hadoop to be installed on notebook
hadoop_version = 2.7
### Version of TensorFlow to be installed on notebook
tensorflow_version = 1.0.0
### Version of Zeppelin to be installed on notebook
zeppelin_version = 0.7.0
### Version of Scala to be installed on notebook
scala_version = 2.11.8

#--- [emr] section contains all parameters that are using for emr provisioning ---#
[emr]
### EMR cluster namr
# cluster_name =
### Period of time while EMR being provisioned (default is 1500)
# timeout =
### Amount of ENR nodes
# instance_count =
### EC2 instance type for master node
# master_instance_type =
### EC2 instance type for all slaves nodes
# slave_instance_type =
### EMR version
# version =
### EMR instance role name
ec2_role = EMR_EC2_DefaultRole
### EMR role name
service_role = EMR_DefaultRole
###
excluded_spark_properties = '"spark.master", "spark.eventLog.enabled", "spark.eventLog.dir", "spark.history.fs.logDirectory", "spark.sql.warehouse.dir", "spark.driver.memory", "spark.executor.extraLibraryPath", "spark.executor.extraClassPath"'
### Enable/Disable EC2 Spot instances for EMR slaves
slave_instance_spot = True
### Percentage of the EC2 price
slave_instance_spot_pct_price = 70
